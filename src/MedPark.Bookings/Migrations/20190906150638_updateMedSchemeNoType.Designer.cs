// <auto-generated />
using System;
using MedPark.Bookings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedPark.Bookings.Migrations
{
    [DbContext(typeof(MedParkBookingContext))]
    [Migration("20190906150638_updateMedSchemeNoType")]
    partial class updateMedSchemeNoType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MedPark.Bookings.Domain.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AppointmentType");

                    b.Property<DateTime>("Created");

                    b.Property<bool>("HasMedicalAid");

                    b.Property<bool>("IsPostponement");

                    b.Property<string>("MedicalAidMembershipNo");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("PatientEmail");

                    b.Property<Guid>("PatientId");

                    b.Property<string>("PatientMobile");

                    b.Property<string>("PatientName");

                    b.Property<string>("PatientSurname");

                    b.Property<DateTime>("ScheduledDate");

                    b.Property<string>("SpecialistEmail");

                    b.Property<Guid>("SpecialistId");

                    b.Property<string>("SpecialistInitials");

                    b.Property<string>("SpecialistSurname");

                    b.Property<string>("SpecialistTel");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("MedPark.Bookings.Domain.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Mobile");

                    b.Property<DateTime>("Modified");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MedPark.Bookings.Domain.Specialist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cellphone");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<DateTime>("Modified");

                    b.Property<Guid>("PracticeId");

                    b.Property<string>("Surname");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Specialist");
                });
#pragma warning restore 612, 618
        }
    }
}
