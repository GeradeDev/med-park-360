# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- dev

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: UseDotNet@2
  displayName: 'Set pipeline to use DotNet Core 2.x'
  inputs:
    version: '2.2.x'
    includePreviewVersions: false

- task: NuGetCommand@2
  displayName: 'Restore NuGet packages for project'
  inputs:
    restoreSolution: '$(basket-proj-path)'

- task: CmdLine@2
  displayName: 'Install Dotnet Tools'
  inputs:
    script: 'dotnet tool install --global dotnet-ef --version 2.2.0'

- task: CmdLine@2
  displayName: 'Generate DB migration script for MedPark.Basket'
  inputs:
    script: 'dotnet ef migrations script --project $(basket-proj-path) -i -o $(build.artifactstagingdirectory)\sql\MedPark.Basket_DB_Migrations.sql'

- task: DotNetCoreCLI@2
  displayName: 'Build project'
  inputs:
    command: 'build'
    projects: '$(basket-proj-path)'
    arguments: '-c Release'
  enabled: false

- task: Docker@2
  displayName: 'Login to Docker Hub'
  inputs:
    containerRegistry: 'docker-hub-connection'
    command: 'login'
    arguments: '-u geradedev -p ODEduhM6SERp1OzeCvgL'

- task: Docker@2
  displayName: 'Build and Push docker image'
  inputs:
    containerRegistry: 'docker-hub-connection'
    repository: 'geradedev/medpark-basket'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile.multistage'
    tags: 'dev'

- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
